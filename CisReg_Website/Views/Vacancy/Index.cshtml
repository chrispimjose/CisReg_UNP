@{
    var vacancyDetails = ViewData["VacancyDetails"] as List<dynamic>;
}

<link href="https://fonts.googleapis.com/css2?family=Poppins:wght@400;500;700&display=swap" rel="stylesheet">

<style>
    :root,
    [data-theme] {
        background-color: white;
    }

    * {
        box-sizing: border-box;
        font-family: 'Poppins', sans-serif;
    }

    html {
        background-color: white;
    }

    h1 {
        text-align: center;
        font-size: 40px;
        color: #57BE93;
        margin: 50px 0px 25px 0px;
        padding: 50px 50px 25px 50px;
    }

    .container {
        display: grid;
        justify-items: center;
        grid-template-columns: repeat(auto-fit, minmax(200px, 1fr));
        gap: 20px;
        width: 100%;
        max-width: 1200px;
        padding: 20px;
        margin: auto;
    }

    .card {
        width: 220px;
        min-height: 300px;
        background-color: #ffffff;
        border: 1px solid #ddd;
        border-radius: 8px;
        box-shadow: 0 4px 8px rgba(0, 0, 0, 0.1);
        padding: 16px;
        text-align: left;
        transition: transform 0.2s ease;
    }

    .card:hover {
        transform: scale(1.02);
    }

    .card:active {
        box-shadow: inset -2px -2px;
        transform: scale(0.98);
    }

    .card h3 {
        font-size: 1.2em;
        margin-bottom: 8px;
        color: #333;
    }

    .card p {
        font-size: 0.9em;
        margin-bottom: 4px;
        color: #666;
    }

    .card p span {
        font-weight: bold;
        color: #444;
    }

    .btn {
        background-color: #57BE93;
    }

    .btn:hover {
        background-color: green;
        transform: scale(1.02);
    }

    .btn-danger {
        background-color: #e63946;
        color: white;
    }

    .btn-danger:hover {
        background-color: #d62828;
    }
</style>

<h1>Gerenciamento de Vagas</h1>

<div class="container">
    @foreach (var vacancy in vacancyDetails)
    {
        if (vacancy.Status == "Vazio")
        {
            <div class="card">
                <h3>Vaga Vazia</h3>
                <p><span>Status:</span> Vaga sem reserva</p>
                <p><span>Para preencher, clique abaixo:</span></p>
                <a asp-controller="Vacancy" asp-action="Preenchimento" class="btn btn-primary">
                    <i class="fa-solid fa-plus-circle"></i> Preencher Vaga
                </a>
            </div>
        }
        else
        {
            <div class="card" data-id="@vacancy.Id">
                <h3>@vacancy.ProfessionalName</h3>
                <p><span>Profissão:</span> @vacancy.ProfessionalAcademic</p>
                <p><span>Especialidade:</span> @vacancy.ProfessionalSpecialty</p>
                <p><span>Paciente:</span> @($"{vacancy.PatientFirstName} {vacancy.PatientLastName}")</p>
                <p><span>Data:</span> @vacancy.AvailableHour.ToString("dd/MM/yyyy")</p>
                <p><span>Horário:</span> @vacancy.AvailableHour.ToString("HH:mm")</p>
                <p><span>Status:</span> @vacancy.Status</p>
                <a href="javascript:void(0);"
                   class="btn btn-danger delete-btn"
                   data-id="@vacancy.Id">
                    <i class="fa-solid fa-trash"></i> Excluir
                </a>
            </div>
        }
    }
</div>

<!-- Renderizando todos os dados de vacancyDetails como JSON -->
<script>
    const vacancyDetails = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(vacancyDetails));

    console.log("Todas as vagas carregadas:", vacancyDetails);

    async function deleteVacancy(vacancyId) {
        if (!confirm('Tem certeza que deseja excluir esta vaga?')) {
            return; // Cancelar a exclusão se o usuário não confirmar
        }

        try {
            const response = await fetch(`/Vacancy/Delete/${vacancyId}`, {
                method: 'DELETE',
                headers: {
                    'Content-Type': 'application/json',
                }
            });

            if (response.ok) {
                alert('Vaga excluída com sucesso!');

                // Remover a vaga do array local
                const vacancyIndex = vacancyDetails.findIndex(v => v.Id === vacancyId);
                if (vacancyIndex !== -1) {
                    vacancyDetails.splice(vacancyIndex, 1);
                }

                // Opcional: Remova o card da vaga sem recarregar a página
                document.querySelector(`[data-id="${vacancyId}"]`).remove();
            } else {
                const error = await response.text();
                alert(`Erro ao excluir a vaga: ${error}`);
            }
        } catch (error) {
            console.error('Erro:', error);
            alert('Ocorreu um erro ao excluir a vaga.');
        }
    }

    // Exemplo de como selecionar e trabalhar com as vagas no frontend
    function showVacancyDetails(vacancyId) {
        const vacancy = vacancyDetails.find(v => v.Id === vacancyId);
        if (vacancy) {
            console.log('Detalhes da vaga selecionada:', vacancy);
        } else {
            console.log('Vaga não encontrada!');
        }
    }
</script>

