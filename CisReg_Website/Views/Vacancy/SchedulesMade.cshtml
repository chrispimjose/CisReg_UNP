@using CisReg_Website.Models;
@using CisReg_Website.Models.Vacancy;
@model CisReg_Website.Models.Vacancy.VacancySchedulesMadeViewModel;

@{
    ViewData["Title"] = "Confira os agendamentos realizados";
}

<div class="min-h-screen bg-customGrey-light font-poppins w-full">
    <!--Cabechalo da página - Nav Inicial -->
    <div class="bg-customGreen-default text-white p-12 w-full">
        <h2 class="text-4xl font-poppins font-bold">AGENDAMENTOS REALIZADOS</h2>
    </div>

    <form class="flex flex-col lg:flex-row md:gap-16" method="get">
        <div class="p-8 lg:p-24 lg:pr-0 lg:w-[30%]">
            <div class="flex flex-col gap-4">
                <div class="flex">
                    <input type="radio" name="Period" id="AllPeriods" class="peer hidden"
                           checked="@(Model.QueryParams.Period is null)">
                    <label for="AllPeriods"
                           class="w-full border border-customGreen-default cursor-pointer text-customGreen-default py-2 px-4 rounded-lg bg-white transition-colors peer-checked:text-white peer-checked:bg-customGreen-default peer-checked:border-customGreen-default">
                        <i class="fa-solid fa-sun mr-4"></i>
                        Todos os turnos
                    </label>
                </div>

                <div class="flex">
                    <input type="radio" name="Period" value="Morning" id="Morning" class="peer hidden"
                           checked="@(Model.QueryParams.Period == Period.Morning)">
                    <label for="Morning"
                           class="w-full border border-customGreen-default cursor-pointer text-customGreen-default py-2 px-4 rounded-lg bg-white transition-colors peer-checked:text-white peer-checked:bg-customGreen-default peer-checked:border-customGreen-default">
                        <i class="fa-solid fa-sun mr-4"></i>
                        Manhã
                    </label>
                </div>

                <div class="flex">
                    <input type="radio" name="Period" value="Afternoon" id="Afternoon" class="peer hidden"
                           checked="@(Model.QueryParams.Period == Period.Afternoon)">
                    <label for="Afternoon"
                           class="w-full border border-customGreen-default cursor-pointer text-customGreen-default py-2 px-4 rounded-lg bg-white transition-colors peer-checked:text-white peer-checked:bg-customGreen-default peer-checked:border-customGreen-default">
                        <i class="fa-solid fa-cloud-sun mr-4"></i>
                        Tarde
                    </label>
                </div>

                <div class="flex">
                    <input type="radio" name="Period" value="Night" id="Night" class="peer hidden"
                           checked="@(Model.QueryParams.Period == Period.Night)">
                    <label for="Night"
                           class="w-full border border-customGreen-default cursor-pointer text-customGreen-default py-2 px-4 rounded-lg bg-white transition-colors peer-checked:text-white peer-checked:bg-customGreen-default peer-checked:border-customGreen-default">
                        <i class="fa-solid fa-moon mr-4"></i>
                        Noite
                    </label>
                </div>
            </div>

            <div class="divider"></div>

            <!--Criação dos botões para seleção de especialistas-->
            <div class="flex flex-wrap gap-2">
                @foreach (var specialty in Model.ProfessionalSpecialties)
                {
                    <div class="flex">
                        <input id="@specialty" type="checkbox" class="peer hidden" value="@specialty"
                               name="ProfessionalSpecialties"
                               checked="@(Model.QueryParams?.ProfessionalSpecialties?.Contains(specialty))">
                        <label for="@specialty"
                               class="border border-customGreen-default text-customGreen-default py-2 px-4 rounded-full bg-white transition-colors peer-checked:text-white peer-checked:bg-customGreen-default cursor-pointer">@specialty</label>
                    </div>
                }
            </div>

            <div class="divider"></div>

            <!--Criação do checkbox com as opções de horarios para visualização-->
            <div class="bg-customGreen-default border rounded-lg p-4 grid gap-4">
                <label class="flex items-center gap-2">
                    <input type="checkbox" name="Status" value="Occupied" class="form-checkbox h-5 w-5 text-white"
                           checked="@(Model.QueryParams?.Status?.Contains(Status.Occupied))">
                    <span class=" text-white font-semibold">Confirmados</span>
                </label>
                <label class="flex items-center gap-2">
                    <input type="checkbox" name="Status" value="Rescheduled" class="form-checkbox h-5 w-5 text-white"
                           checked="@(Model.QueryParams?.Status?.Contains(Status.Rescheduled))">
                    <span class="text-white font-semibold">Reagendados</span>
                </label>
                <label class="flex items-center gap-2">
                    <input type="checkbox" name="Status" value="Canceled" class="form-checkbox h-5 w-5 text-white"
                           checked="@(Model.QueryParams?.Status?.Contains(Status.Canceled))">
                    <span class="text-white font-semibold">Cancelados</span>
                </label>
            </div>
        </div>

        <!-- Segunda Seção do código, com o a área de pesquisa - personalização do input buscar -->
        <div class="p-8 lg:p-24 lg:pl-0 flex flex-col gap-2 md:w-[70%]">
            <div class="relative flex">
                <div class="inset-y-0 start-0 flex items-center">
                    <i class="fa-solid fa-magnifying-glass absolute top-3 left-3"></i>
                </div>
                <input type="search" id="search" name="Search" value="@Model.QueryParams?.Search"
                       class="w-full p-2 pl-10 text-sm border border-gray-300 rounded-lg rounded-r-none bg-gray-50 dark:border-customGreen-default dark:text-black focus:outline-none focus:ring focus:ring-customGreen-default"
                       placeholder="Pesquisar" />
                <button type="submit"
                        class="text-white end-1.5 bottom-1.5 bg-customGreen-default hover:bg-customGreen-default focus:ring-4 focus:outline-none focus:ring-blue-300 font-medium rounded-lg rounded-l-none text-sm px-4 py-1 dark:bg-customGreen-default dark:hover:bg-customGreen-defaultdark:focus:ring-blue-800">
                    Pesquisar
                </button>
            </div>

            <!--Acrescentando os botoes de datas de agendamentos-->
            <div class="grid md:grid-cols-3 gap-2 text-white items-end">
                <div class="grid">
                    <span class="text-customGreen-default text-sm">
                        Filtrar a partir de
                    </span>
                    <input type="datetime-local" name="InitialDate"
                           value="@Model.QueryParams?.InitialDate?.ToString("yyyy-MM-ddTHH:mm")"
                           class="bg-customGreen-default border-none rounded-lg p-2 hover:bg-emerald-700 w-full text-white">
                </div>

                <div class="grid">
                    <span class="text-customGreen-default text-sm">
                        Até
                    </span>
                    <input type="datetime-local" name="FinalDate"
                           value="@Model.QueryParams?.FinalDate?.ToString("yyyy-MM-ddTHH:mm")"
                           class="bg-customGreen-default border-none rounded-lg p-2 hover:bg-emerald-700 w-full text-white">
                </div>

                <a asp-action="SchedulesMade"
                   class=" border border-customGreen-default text-customGreen-default py-2 px-4 rounded-lg bg-white hover:bg-customGreen-default hover:text-white focus:bg-customGreen-default focus:text-white active:bg-customGreen-default active:text-white transition-colors h-fit">
                    <i class="fa-solid fa-broom mr-6"></i>Limpar filtros
                </a>

                <!-- Acrescentado o layout dos agendamentos realizados - card com os agendametos-->
                @foreach (var vacancy in Model.Vacancies)
                {
                    <div class="card w-100 shadow-xl bg-customGreen-default ">
                        <figure>
                            <img src="~/lib/images/logo-unp.svg" alt="Shoes" />
                        </figure>
                        <div class="card-body">
                            <div class="flex items-end gap-2">
                                <span class="card-title text-5xl font-bold">
                                    @vacancy.AvailableHour.TimeOfDay.ToString("hh\\:mm")
                                </span>
                                <span class="text-sm mb-2">
                                    @vacancy.AvailableHour.Date.ToString("d")
                                </span>
                            </div>
                            <p>Agendamento para @vacancy?.Patient?.FirstName @vacancy?.Patient?.LastName</p>
                            <div class="card-actions mt-1">
                                <div class="badge badge-outline">
                                    @vacancy?.Professional?.FirstName
                                    @vacancy?.Professional?.LastName
                                </div>
                                <div class="badge badge-outline">@vacancy?.Professional?.Specialty</div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </form>
</div>