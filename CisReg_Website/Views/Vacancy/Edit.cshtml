@{
    var vacancyDetails = ViewData["VacancyDetails"] as List<dynamic>;
    var vacancy = vacancyDetails != null && vacancyDetails.Count > 0 ? vacancyDetails[0] : null;
    var academicDetails = ViewData["academicDetails"] as List<string>;
    var professionalAcademic = vacancy != null ? vacancy.ProfessionalAcademic : string.Empty;
    var professionalSpecialty = vacancy != null ? vacancy.ProfessionalSpecialty : string.Empty;
 
    var professionalsBySpecialtyAndAcademic = ViewData["ProfessionalsBySpecialtyAndAcademic"] as List<Professional>;
    
}
@if (@vacancy.Permissions == "2")
            {
<div class="container mx-auto mt-10 p-4 bg-white rounded shadow-lg max-w-2xl">
    <h2 class="text-2xl font-bold mb-6 text-center">Preenchimento de Vagas</h2>

    <!-- Formulário de Cadastro -->
    <form asp-controller="Vacancy" asp-action="EditVacancy" method="post">
        <input type="hidden" name="id" value="@vacancy.VacancyId" />
        <input type="hidden" name="patientId" value="@vacancy.PatientId" />
        <input  id="selectedDateTime" name="selectedDateTime" />

        <!-- Dados do Paciente -->
        <div>
            <h3 class="text-xl font-semibold mb-4">Dados do Paciente</h3>
            <div class="grid gap-4">
                <input type="date" name="dob" placeholder="Data de Nascimento" class="border rounded p-2 w-full" value="@(vacancy.AvailableHour != null ? ((DateTime)vacancy.AvailableHour).ToString("yyyy-MM-dd") : string.Empty)" required>
                <input type="text" name="firstName" placeholder="First name" class="border rounded p-2 w-full" value="@vacancy.PatientFirstName" required>
                <input type="text" name="lastName" placeholder="Last name" class="border rounded p-2 w-full" value="@vacancy.PatientLastName" required>
                <input type="text" name="susCard" placeholder="Cartão SUS" class="border rounded p-2 w-full" value="@vacancy.SusC" required>
                <input type="text" name="cid" placeholder="CID" class="border rounded p-2 w-full" value="@vacancy.cnes" required>
                <input type="tel" name="phone" placeholder="Telefone" class="border rounded p-2 w-full" value="@vacancy.php" required>
                <input type="text" name="motherName" placeholder="Nome da Mãe" class="border rounded p-2 w-full" value="@vacancy.Mother" required>
                <input type="text" name="fatherName" placeholder="Nome do Pai" class="border rounded p-2 w-full" value="@vacancy.Father" required>
					<label for="calendario">Data</label>


					<input type="date" id="calendario" name="calendarDate" class="border rounded p-2 w-full" value="@(vacancy.AvailableHour != null ? ((DateTime)vacancy.AvailableHour).ToString("yyyy-MM-dd") : string.Empty)" required />

					<label for="formacaoAcademica">Formação Acadêmica</label>
                    <input type="text" name="fatherName" placeholder="Academic" class="border rounded p-2 w-full" value="@vacancy.ProfessionalAcademic" required>
                    <label for="especialidade">Especialidade</label>
                    <input type="text" name="fatherName" placeholder="Especialide" class="border rounded p-2 w-full" value="@vacancy.ProfessionalSpecialty" required>
            </div>
        </div>
      
            <!-- Tabela de Profissionais -->
            <div class="mt-6">
                <h3 class="text-xl font-semibold mb-4">Seleção de Profissionais</h3>
                <table class="table-auto w-full border-collapse border border-gray-300" id="profissionaisTurnoTable">
                    <thead>
                        <tr class="bg-gray-100">
                            <th class="border p-2">Nome dos Profissionais</th>
                            <th class="border p-2 text-center">Manhã</th>
                            <th class="border p-2 text-center">Tarde</th>
                        </tr>
                    </thead>
                    <tbody>
                        <!-- Conteúdo será carregado dinamicamente via AJAX -->
                    </tbody>
                </table>
            </div>


            <!-- Botões de Ação -->
            <div class="flex justify-between mt-6">
                <button type="button" class="bg-gray-200 hover:bg-gray-300 text-gray-700 font-semibold py-2 px-4 rounded" onclick="clearFields()">Voltar</button>
                <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded">Cadastrar</button>
            </div>
        </form>
    </div>


}
else}{
    <div class="container mx-auto mt-10 p-4 bg-white rounded shadow-lg max-w-2xl">
        <h2 class="text-2xl font-bold mb-6 text-center">Preenchimento de Vagas</h2>

        <!-- Formulário de Cadastro -->
        <form asp-controller="Vacancy" asp-action="EditVacancy" method="post">
            <input type="hidden" name="id" value="@vacancy.VacancyId" />
            <input type="hidden" name="patientId" value="@vacancy.PatientId" />
            <input id="selectedDateTime" name="selectedDateTime" />

            <!-- Dados do Paciente -->
            <div>
                <h3 class="text-xl font-semibold mb-4">Dados do Paciente</h3>
                <div class="grid gap-4">
                    <input type="date" name="dob" placeholder="Data de Nascimento" class="border rounded p-2 w-full" value="@(vacancy.AvailableHour != null ? ((DateTime)vacancy.AvailableHour).ToString("yyyy-MM-dd") : string.Empty)" required>
                    <input type="text" name="firstName" placeholder="First name" class="border rounded p-2 w-full" value="@vacancy.PatientFirstName" required>
                    <input type="text" name="lastName" placeholder="Last name" class="border rounded p-2 w-full" value="@vacancy.PatientLastName" required>
                    <input type="text" name="susCard" placeholder="Cartão SUS" class="border rounded p-2 w-full" value="@vacancy.SusC" required>
                    <input type="text" name="cid" placeholder="CID" class="border rounded p-2 w-full" value="@vacancy.cnes" required>
                    <input type="tel" name="phone" placeholder="Telefone" class="border rounded p-2 w-full" value="@vacancy.php" required>
                    <input type="text" name="motherName" placeholder="Nome da Mãe" class="border rounded p-2 w-full" value="@vacancy.Mother" required>
                    <input type="text" name="fatherName" placeholder="Nome do Pai" class="border rounded p-2 w-full" value="@vacancy.Father" required>
                    
                    <input type="text" name="fatherName" placeholder="Nome do Pai" class="border rounded p-2 w-full" value="@vacancy.Father" required>
                    <input type="text" name="fatherName" placeholder="Nome do Pai" class="border rounded p-2 w-full" value="@vacancy.Father" required>

                </div>
            </div>

            <!-- Dados da Vaga -->

            <label for="calendario">Data</label>


            <input type="date" id="calendario" name="calendarDate" class="border rounded p-2 w-full" value="@(vacancy.AvailableHour != null ? ((DateTime)vacancy.AvailableHour).ToString("yyyy-MM-dd") : string.Empty)" required />

            <!-- Botões de Ação -->
            <div class="flex justify-between mt-6">
                <button type="button" class="bg-gray-200 hover:bg-gray-300 text-gray-700 font-semibold py-2 px-4 rounded" onclick="clearFields()">Voltar</button>
                <button type="submit" class="bg-blue-500 hover:bg-blue-600 text-white font-semibold py-2 px-4 rounded">Cadastrar</button>
            </div>
        </form>
    </div>
    <script>
        $(document).ready(function () {
            // Função para atualizar a tabela de profissionais
            function updateProfissionaisTurnos() {
                const especialidade = $('#especialidade').val();
                const formacaoAcademica = $('#formacaoAcademica').val();

                // Referência para o corpo da tabela
                const profissionaisTurnoTableBody = $('#profissionaisTurnoTable tbody');

                // Verifica se ambos os campos estão preenchidos antes de fazer a requisição
                if (especialidade && formacaoAcademica) {
                    $.ajax({
                        url: '@Url.Action("GetProfissionaisPorEspecialidadeEFormacao", "Vacancy")',
                        type: 'GET',
                        data: { especialidade, formacaoAcademica },
                        success: function (response) {
                            console.log(response);  // Debugging: log response

                            profissionaisTurnoTableBody.empty(); // Limpa as linhas anteriores

                            // Verifica se há profissionais na resposta
                            if (response.profissionais && response.profissionais.length > 0) {
                                // Itera sobre os profissionais e cria as linhas
                                response.profissionais.forEach(profissional => {
                                    const row = `
                                        <tr data-professional-id="${profissional.id}">
                                            <td class="border border-gray-300 px-4 py-2">${profissional.firstName} ${profissional.lastName}</td>
                                            <td class="border border-gray-300 px-4 py-2 text-center">
                                                <input type="radio" name="turno_${profissional.id}" value="Manha" />
                                            </td>
                                            <td class="border border-gray-300 px-4 py-2 text-center">
                                                <input type="radio" name="turno_${profissional.id}" value="Tarde" />
                                            </td>
                                        </tr>`;
                                    // Adiciona a linha à tabela
                                    profissionaisTurnoTableBody.append(row);
                                });
                            } else {
                                alert('Nenhum profissional encontrado.');
                            }
                        },
                        error: function () {
                            alert('Erro ao carregar profissionais.');
                        }
                    });
                }
            }

            // Função para verificar se ambos os campos (especialidade e formação acadêmica) estão selecionados
            function checkAndUpdate() {
                const especialidade = $('#especialidade').val();
                const formacaoAcademica = $('#formacaoAcademica').val();

                if (especialidade && formacaoAcademica) {
                    updateProfissionaisTurnos();
                }
            }

            // Chama checkAndUpdate na carga da página
            checkAndUpdate();

            // Aciona a atualização quando a especialidade ou formação acadêmica mudar
            $('#especialidade, #formacaoAcademica').on('change', function () {
                checkAndUpdate();
            });
        });
    </script>


<style>
    input, select {
        background-color: white !important;
        color: black !important;
    }
</style>