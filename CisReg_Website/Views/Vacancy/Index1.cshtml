@{
    var vacancyDetails = ViewData["VacancyDetails"] as List<dynamic>;
    var vacancy = vacancyDetails != null && vacancyDetails.Count > 0 ? vacancyDetails[0] : null;
    var academicDetails = ViewData["academicDetails"] as List<string>;
    var professionalAcademic = vacancy != null ? vacancy.ProfessionalAcademic : string.Empty;
    var professionalSpecialty = vacancy != null ? vacancy.ProfessionalSpecialty : string.Empty;
}

<h1 class="text-center text-4xl text-customGreen-default my-12 justify-center items-center">
    Editar a Vaga
</h1>

@if (vacancy != null)
{
    <!-- Container Principal -->
    <!-- Formulário de Cadastro -->
    <form asp-controller="Vacancy" asp-action="EditVacancy" method="post">
        <input type="hidden" name="id" value="@vacancy.VacancyId" />
        <input type="hidden" name="patientId" value="@vacancy.PatientId" />
        <!-- Dados do Paciente -->
        <div>
            <h3 class="text-xl font-semibold mb-4">Dados do Paciente</h3>
            <div class="grid gap-4">
                <input type="text" name="firstName" placeholder="First name" class="border rounded p-2 w-full" value="@vacancy.PatientFirstName" required>
                <input type="text" name="lastName" placeholder="Last name" class="border rounded p-2 w-full" value="@vacancy.PatientLastName" required>
                <input type="date" name="dob" placeholder="Data de Nascimento" class="border rounded p-2 w-full" value="@(vacancy.AvailableHour != null ? ((DateTime)vacancy.AvailableHour).ToString("yyyy-MM-dd") : string.Empty)" required>
                <input type="date" name="data" placeholder="agendado" class="border rounded p-2 w-full" value="@(vacancy.AvailableHour != null ? ((DateTime)vacancy.AvailableHour).ToString("yyyy-MM-dd") : string.Empty)" required>

                <input type="text" name="susCard" placeholder="Cartão SUS" class="border rounded p-2 w-full" value="@vacancy.SusC" required>
                <input type="text" name="cid" placeholder="CID" class="border rounded p-2 w-full" value="@vacancy.cnes" required>
                <input type="tel" name="phone" placeholder="Telefone" class="border rounded p-2 w-full" value="@vacancy.php" required>
                <input type="text" name="motherName" placeholder="Nome da Mãe" class="border rounded p-2 w-full" value="@vacancy.Mother" required>
                <input type="text" name="fatherName" placeholder="Nome do Pai" class="border rounded p-2 w-full" value="@vacancy.Father" required>
            </div>
        </div>

        <!-- Dados da Vaga -->
        <div class="mt-6">
            <h3 class="text-xl font-semibold mb-4">Vaga</h3>
            <div class="grid gap-4">
                <div>
                    <label for="formacaoAcademica">Formação Acadêmica</label>
                    <select id="formacaoAcademica" name="academic" class="border rounded p-2 w-full" required>
                        <option value="">Selecione a Formação Acadêmica</option>
                        @if (academicDetails != null)
                        {
                            foreach (var academic in academicDetails)
                            {
                                <option value="@academic">@academic</option>
                            }
                        }
                    </select>
                </div>

                <div id="especialidadeForm" style="margin-top: 10px;">
                    <label for="especialidade">Especialidade</label>
                    <select id="especialidade" name="specialty" class="border rounded p-2 w-full">
                        <option value="">Selecione a Especialidade</option>
                    </select>
                </div>



                <!-- Calendário -->
                <div id="calendarioContainer" style="display:none; margin-top: 10px;">
                    <label for="calendario">Selecione o Dia</label>
                    <input type="date" id="calendario" name="date" value="@vacancy.AvailableHour" class="border rounded p-2 w-full max-w-md">
                </div>

                <!-- Profissionais -->
                <div id="profissionaisContainer" style="display:none; margin-top: 10px;">
                    <h4 class="font-medium">Profissionais Disponíveis</h4>
                    <table id="profissionaisTable" class="table-auto border-collapse border border-gray-300 w-full mt-4">
                        <thead>
                            <tr>
                                <th class="border border-gray-300 px-4 py-2">Nome</th>
                                <th class="border border-gray-300 px-4 py-2">Opção de Horário</th>
                                <th class="border border-gray-300 px-4 py-2">Data e Hora</th>
                            </tr>
                        </thead>
                        <tbody>
                            <!-- As linhas serão preenchidas dinamicamente -->
                        </tbody>
                    </table>
                    <button type="button" onclick="enviarHorariosSelecionados()" class="mt-4 bg-blue-500 hover:bg-blue-600 text-white py-2 px-4 rounded">Enviar Seleções</button>
                </div>
                <input id="selectedDateTime" name="SelectedDateTime" />
            </div>
        </div>

        <!-- Botões de Ação -->
        <div class="flex justify-between mt-6">
            <button type="button" class="" onclick="clearFields()">Voltar</button>
            <button type="submit" class="">Cadastrar</button>
        </div>
        <!-- Mensagem de Erro -->
        <div id="errorMessage" style="color: red; display: none; margin-top: 10px;"></div>
    </form>
}
else
{
    <p>Nenhuma vaga encontrada.</p>
}

<script>
    // Valores iniciais de formação acadêmica e especialidade vindos do servidor
    var professionalAcademic = "@professionalAcademic";
    var professionalSpecialty = "@professionalSpecialty";

    document.addEventListener('DOMContentLoaded', function () {
        // Set the default academic formation if provided
        if (professionalAcademic) {
            var selectAcademic = document.getElementById('formacaoAcademica');
            selectAcademic.value = professionalAcademic;

            // Automatically load specialties and preselect the correct one
            loadSpecialties(professionalAcademic, professionalSpecialty);
        }

        // Update specialties when the academic formation changes
        document.getElementById('formacaoAcademica').addEventListener('change', function () {
            var selectedAcademic = this.value;
            // Reset specialty dropdown when academic changes
            document.getElementById('especialidade').innerHTML = '<option value="">Selecione a Especialidade</option>';
            loadSpecialties(selectedAcademic, null);  // Load specialties without default selection
        });
    });

    // Function to load specialties based on the selected academic formation
    function loadSpecialties(academic, selectedSpecialty) {
        if (academic) {
            $.ajax({
                url: '@Url.Action("GetEspecialidadesPorFormacao", "Vacancy")',
                type: 'GET',
                data: { formacaoAcademica: academic },
                success: function (response) {
                    var specialtySelect = document.getElementById('especialidade');
                    specialtySelect.innerHTML = '<option value="">Selecione a Especialidade</option>';

                    if (response.error) {
                        document.getElementById('errorMessage').textContent = response.error;
                        document.getElementById('errorMessage').style.display = 'block';
                    } else {
                        response.especialidades.forEach(function (especialidade) {
                            var option = document.createElement('option');
                            option.value = especialidade.nome;
                            option.textContent = especialidade.nome;

                            // Preselect the specialty if it matches the provided value
                            if (especialidade.nome === selectedSpecialty) {
                                option.selected = true;
                            }

                            specialtySelect.appendChild(option);
                        });
                        document.getElementById('errorMessage').style.display = 'none';
                    }
                },
                error: function () {
                    document.getElementById('errorMessage').textContent = 'Erro ao carregar especialidades.';
                    document.getElementById('errorMessage').style.display = 'block';
                }
            });
        }
    }

    $(document).ready(function () {
        $('#formacaoAcademica').change(function () {
            var formacaoAcademica = $(this).val();

            if (formacaoAcademica) {
                $.ajax({
                    url: '@Url.Action("GetEspecialidadesPorFormacao", "Vacancy")',
                    type: 'GET',
                    data: { formacaoAcademica: formacaoAcademica },
                    success: function (response) {
                        if (response.error) {
                            $('#errorMessage').text(response.error).show();
                            $('#especialidade').empty().append('<option value="">Selecione a Especialidade</option>');
                            $('#especialidadeForm').hide();
                        } else {
                            $('#especialidade').empty().append('<option value="">Selecione a Especialidade</option>');
                            response.especialidades.forEach(function (especialidade) {
                                $('#especialidade').append('<option value="' + especialidade.nome + '">' + especialidade.nome + '</option>');
                            });
                            $('#errorMessage').hide();
                            $('#especialidadeForm').show();

                            // Chama a função para atualizar os profissionais disponíveis
                            updateProfissionaisDisponiveis();
                        }
                    },
                    error: function () {
                        $('#errorMessage').text('Erro ao carregar especialidades.').show();
                    }
                });
            } else {
                $('#especialidade').empty().append('<option value="">Selecione a Especialidade</option>');
                $('#especialidadeForm').hide();
                $('#errorMessage').hide();
            }
        });
    });

</script>
<style>
    input, select {
        background-color: white !important;
        color: black !important;
    }
</style>